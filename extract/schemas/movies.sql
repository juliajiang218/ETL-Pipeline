--1
select eng_title, releasedate, runtime, bugt_amt, revenue from movie where eng_title = 'Interstellar';
--2
select orig_title, releasedate from movie where id in (
    select movie_id from produces where country_code in (
        select code from country where name = 'Austria'
    )
) order by orig_title asc;
--3
select strftime('%Y', releasedate) as "year", count(id) from movie 
group by "year" 
order by "year" asc;
--4 
select eng_title, count(actor.id) as "actor counts" from movie, role, actor
where movie.id = role.movie_id and role.actor_id = actor.id
group by movie.id
order by count(actor.id) desc limit 1;

--5 Compute the top-20 highest-rated movies by averagerating.
-- Return Englishtitle,release date, average rating; 
--sorted descending by the average rating, and in case of equal ratings, further sorted ascending by English title.
select eng_title, releasedate, round(avg(score),2) as "Average Rating"
from movie, user_rating
where movie.id = user_rating.movie_id
order by round(avg(score),2) desc, eng_title asc;
--6
-- How many movies of genre Science Fiction have been released each year between 2012 and 2016 (both inclusive)? 
--Return year, count; sorted ascending by year.
select strftime('%Y',releasedate) as "year", count(*) as "movie counts" from movie
where strftime('%Y',releasedate) between '2012' and '2016 '
and id in(
    select movie_id from categories where genre_id = (
        select id from genre where name = "Science Fiction"
    )  
) 
group by strftime('%Y',releasedate)
order by "year" asc; 
--7
--Who are the top-10 most successful actors by number of movies they played in, and profits these movies generated? 
--Return actor name, count, profit as union distinct of top- 10 actors by maximum count and top-10 actors by maximum profit.

with actor_movie_count as (
    -- Count the number of movies each actor has appeared in
    select a.name, count(r.movie_id) as movie_count
    from actor a, movie m, role r
    where a.id = r.actor_id and m.id = r.movie_id
    group by a.name
),
actor_movie_profit as (
    -- Calculate the total profit generated by the movies the actor appeared in
    select a.name, sum(m.revenue - m.bugt_amt) as total_profit
    from actor a, movie m, role r
    where a.id = r.actor_id and m.id = r.movie_id
    group by a.name
),
top_10_by_count AS (
    -- Select top 10 actors by movie count
    select name, movie_count, null as total_profit
    from actor_movie_count
    order by movie_count desc
    limit 10
),
top_10_by_profit as (
    -- Select top 10 actors by movie profit
    select name, null as movie_count, total_profit
    from actor_movie_profit
    order by total_profit desc
    limit 10
)
-- Combine both lists and ensure distinct actors
select name, movie_count, total_profit
from top_10_by_count
union
select name, movie_count, total_profit
from top_10_by_profit;

--8
--Which pairs of actors co-appeared most-frequently in movies each year between 2010 and 2013 (both inclusive)? 
--Return name of actor1, name of actor2, year, count, sorted ascending by year.
with actor_pairs as (
    -- Get pairs of actors who co-appeared in the same movie
    select r1.actor_id as actor1_id, r2.actor_id as actor2_id, strftime('%Y', m.releasedate) as year
    from role r1
    join role r2 on r1.movie_id = r2.movie_id and r1.actor_id < r2.actor_id
    join movie m on r1.movie_id = m.id
    where strftime('%Y', m.releasedate) between '2010' and '2013'
),
coappearance_count as (
    -- Count the number of co-appearances for each pair of actors in each year
    select actor1_id, actor2_id, year, count(*) as coappearance_count
    from actor_pairs
    group by actor1_id, actor2_id, year
)
-- Return the names of actors, year, and count of co-appearances, sorted by year
select a1.name as actor1, a2.name as actor2, year, coappearance_count
from coappearance_count
join actor a1 on coappearance_count.actor1_id = a1.id
join actor a2 on coappearance_count.actor2_id = a2.id
order by year asc, coappearance_count desc;
